<h2 >Payment Summary</h2>
<form action="/reports/paymentsummary" >
  <div class="jumbotron" style="background-color:whitesmoke">
<div class="row" style=" margin-left: 108px;">
    <div class="col-xs-3">
       <label style="margin-left: 2px;">Date From</label>
       <input type="text" name="date_from" id="date_from" value="<%= params[:date_from]%>" class="form-control">
    </div>
    <div class="col-xs-3">
       <label style="margin-left: 2px;">Date To</label>
       <input type="text" class="form-control" name="date_to" value="<%= params[:date_to]%>" id="date_to">
    </div>
    <div class="col-xs-3">
  <label style="margin-left: 2px;">Select Vendors</label>
<br>
   <%= select_tag "vendor_id", options_for_select(current_user.vendors.order_by_name.map{|s|[s.company_name, s.id]}),:id=>"client" , class: 'form-control ' ,  required: true, multiple: true, size:2%>


  </div>
   <div class="col-xs-3" style="margin-top: 25px;">
      
    <input type="submit" name="" class="btn btn-primary form-control"  value="search" id="sub">
    </div>
</div>

</div>

<br>
  


</form>



<%if params[:action] == "paymentsummary" && @data.present?  %>
<div id="dvData">
<table class="table table-hover table-striped">
 <h2><a href="#" class="export btn btn-success pull-right">Export To Excel</a></h2>
<br>
  <thead>
    <tr>
      <td><b>TransactionId</b></td>
      <td><b>Vendor Id</b></td>
      <td><b>Vendor Name</b></td>
      <td><b>Last paid at</b></td>
      <td><b>Total slips</b></td>
      <td><b>Total Paid</b></td>
      <td><b>End Cash</b></td>



      <td colspan="3"></td>
    </tr>
  </thead>

  <tbody>
<%cash_in=0%>
<%cash_out=0%>
<%cash=0%>
<%cash=@begining_balance%>
<br>
<h5 class="pull-right" style="margin-right: 83px;"><b>Starting Balance: <%=number_with_precision(cash  , :precision=> 2)%></b></h5>


<tr>
  <td><%= @data.first.id%></td>
  <td><%= @data.first.vendor.id %></td>
  <td><%=@data.first.vendor.name%></td> 
  <td><%=@data.first.transactionbills.last.updated_at.to_date%></td> 
  <td><%=@data.first.transactionbills.count%></td> 
  <td><%=number_with_precision(@data.first.transactionbills.map{|a| a.balance}.compact.sum.to_f,precision: 2)%></td>  
    <%cash_out= @data.first.transactionbills.map{|a| a.balance}.compact.sum.to_f%>
    <td><%=number_with_precision(cash-=cash_out, :precision=>2)%></td> 

  
</tr>
<br>

  </tbody>

</table>
<h5 style="margin-right: 83px;" class="pull-right"><b>Ending Balance: <%= number_with_precision(cash, precision:2)%></b></h5>

</div>
<%elsif params[:vendor_id] && @data.empty? %>


<h4 class="text-center">No record found.</h4>

<%end%>








<script>

$('option').mousedown(function(e) {
    e.preventDefault();
    $(this).prop('selected', $(this).prop('selected') ? false : true);
    return false;
});

  $(document).ready(function() {
        $('#client_id').multiselect();
    })
  $(function() {
    $( "#date_from" ).datepicker({ dateFormat: 'dd-mm-yy' }).val();
    $( "#date_to" ).datepicker({ dateFormat: 'dd-mm-yy' }).val();
  });


$(document).ready(function () {

    function exportTableToCSV($table, filename) {

        var $rows = $table.find('tr:has(td)'),

            // Temporary delimiter characters unlikely to be typed by keyboard
            // This is to avoid accidentally splitting the actual contents
            tmpColDelim = String.fromCharCode(11), // vertical tab character
            tmpRowDelim = String.fromCharCode(0), // null character

            // actual delimiter characters for CSV format
            colDelim = '","',
            rowDelim = '"\r\n"',

            // Grab text from table into CSV formatted string
            csv = '"' + $rows.map(function (i, row) {
                var $row = $(row),
                    $cols = $row.find('td');

                return $cols.map(function (j, col) {
                    var $col = $(col),
                        text = $col.text();

                    return text.replace(/"/g, '""'); // escape double quotes

                }).get().join(tmpColDelim);

            }).get().join(tmpRowDelim)
                .split(tmpRowDelim).join(rowDelim)
                .split(tmpColDelim).join(colDelim) + '"',

            // Data URI
            csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);

        $(this)
            .attr({
            'download': filename,
                'href': csvData,
                'target': '_blank'
        });
    }

    // This must be a hyperlink
    $(".export").on('click', function (event) {
        // CSV
        exportTableToCSV.apply(this, [$('#dvData>table'), 'export.xls']);
        
        // IF CSV, don't do event.preventDefault() or return false
        // We actually need this to be a typical hyperlink
    });
});




</script>
  <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
